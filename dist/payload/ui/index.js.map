{"version":3,"sources":["../../../src/payload/ui/getReference.ts","../../../src/payload/ui/getRelation.ts"],"sourcesContent":["import { DefaultDocumentIDType } from \"payload\";\n\nexport function getReference<T>(\n  value: DefaultDocumentIDType | T | null | undefined\n) {\n  const isResolved = typeof value !== \"string\";\n  return isResolved ? (value as T) : null;\n}\n","import { DefaultDocumentIDType, JsonValue } from \"payload\";\nimport { getReference } from \"./getReference.js\";\n\ntype RelationProps<T> = {\n  relationTo: string;\n  value: T | DefaultDocumentIDType;\n};\n\nexport const getRelation = <T>(props: RelationProps<T>) => {\n  const { relationTo, value } = props;\n\n  const getValue = (): null | T => getReference(value);\n\n  const getOrFetchValue = async (queryCb: () => Promise<T>): Promise<T> => {\n    const resolvedValue = getValue();\n    if (resolvedValue !== null) {\n      return resolvedValue;\n    }\n\n    const result = await queryCb();\n    return result;\n  };\n\n  return {\n    getOrFetchValue,\n    getValue,\n    relationTo,\n  };\n};\n"],"mappings":";AAEO,SAAS,aACd,OACA;AACA,QAAM,aAAa,OAAO,UAAU;AACpC,SAAO,aAAc,QAAc;AACrC;;;ACCO,IAAM,cAAc,CAAI,UAA4B;AACzD,QAAM,EAAE,YAAY,MAAM,IAAI;AAE9B,QAAM,WAAW,MAAgB,aAAa,KAAK;AAEnD,QAAM,kBAAkB,OAAO,YAA0C;AACvE,UAAM,gBAAgB,SAAS;AAC/B,QAAI,kBAAkB,MAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,SAAS,MAAM,QAAQ;AAC7B,WAAO;AAAA,EACT;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":[]}